export const textToMorseCipher = {
    a: ".-",
    b: "-...",
    c: "-.-.",
    d: "-..",
    e: ".",
    f: "..-.",
    g: "--.",
    h: "....",
    i: "..",
    j: ".---",
    k: "-.-",
    l: ".-..",
    m: "--",
    n: "-.",
    o: "---",
    p: ".--.",
    q: "--.-",
    r: ".-.",
    s: "...",
    t: "-",
    u: "..-",
    v: "...-",
    w: ".--",
    x: "-..-",
    y: "-.--",
    z: "--..",
    " ": "|", // spaces in text are converted to pipes
    1: ".----",
    2: "..---",
    3: "...--",
    4: "....-",
    5: ".....",
    6: "-....",
    7: "--...",
    8: "---..",
    9: "----.",
    0: "-----",
    ".": ".-.-.-",
    ",": "--..--",
    ":": "---...",
    '"': ".-..-.",
    "'": ".----.",
    "!": "-.-.--",
    "?": "..--..",
    "-": "-....-",
};

// morseToTextCipher reverses the keys and values of textToMorseCipher to decode morse code
export const morseToTextCipher = Object.entries(textToMorseCipher).reduce((acc, [key, value]) => {
    acc[value] = key;
    return acc;
}, {});
